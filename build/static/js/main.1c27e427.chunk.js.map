{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","year","Date","getFullYear","Footer","Note","props","className","title","content","type","onClick","deleteNote","id","CreateArea","useState","isExpanded","setExpand","text","setText","handleChange","event","target","name","value","prevValue","onChange","placeholder","autoComplete","rows","Zoom","in","Fab","addNote","App","notes","setNotes","deleteItem","filter","item","index","note","map","key","ReactDom","render","document","getElementById"],"mappings":"2NAWeA,MARf,WACI,OACG,gCACI,gCAAK,kBAAC,IAAD,MAAL,aCJLC,GAAO,IAAIC,MAAOC,cAUTC,MARf,WACI,OACI,gCACI,gDAAiBH,EAAjB,O,iBCcGI,MAlBf,SAAcC,GAOV,OACI,yBAAKC,UAAU,QACf,4BAAKD,EAAME,OACX,2BAAIF,EAAMG,SACV,4BAAQC,KAAO,SAASC,QARR,WAChBL,EAAMM,WAAWN,EAAMO,MAQnB,kBAAC,IAAD,S,iDC4CGC,MAtDf,SAAoBR,GAGhB,MAAiCS,oBAAS,GAA1C,mBAAOC,EAAP,KAAoBC,EAApB,KAGA,EAAyBF,mBAAS,CAC9BP,MAAQ,GACRC,QAAU,KAFd,mBAAOS,EAAP,KAAcC,EAAd,KAWMC,EAAe,SAACC,GAClB,MAAuBA,EAAMC,OAAtBC,EAAP,EAAOA,KAAOC,EAAd,EAAcA,MACdL,GAAQ,SAAAM,GACJ,OAAO,2BACAA,GADP,kBAEKF,EAAQC,QAiBrB,OACI,6BACA,0BAAMjB,UAAY,eACbS,GAAc,2BAAOU,SAAYN,EAAcI,MAASN,EAAKV,MAAOe,KAAK,QAAQI,YAAY,QAAQC,aAAe,QACrH,8BAAUjB,QA/BG,WACjBM,GAAU,IA8B6BS,SAAYN,EAAcI,MAASN,EAAKT,QAASc,KAAK,UAAUI,YAAY,iBAAiBE,KAAQb,EAAa,IAAM,IAAKY,aAAe,QAC/K,kBAACE,EAAA,EAAD,CAAMC,KAAMf,GACR,kBAACgB,EAAA,EAAD,CAAKtB,KAAO,SAASC,QAjBb,WAEhBL,EAAM2B,QAAQf,GAGdC,EAAQ,CACJX,MAAQ,GACRC,QAAU,OAWF,kBAAC,IAAD,WCjBLyB,MA5Bf,WAEI,MAA2BnB,mBAAS,IAApC,mBAAOoB,EAAP,KAAeC,EAAf,KAQMC,EAAa,SAACxB,GAChBuB,GAAS,SAAAX,GAAS,OAAIA,EAAUa,QAAO,SAACC,EAAOC,GAAR,OAAkBA,IAAU3B,SAGvE,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CACAoB,QAdQ,SAACQ,GACbL,GAAS,SAAAX,GAAS,4BAAQA,GAAR,CAAoBgB,UAejCN,EAAMO,KAAI,SAACD,EAAOD,GAAR,OACP,kBAAC,EAAD,CAAMG,IAAOH,EAAO3B,GAAM2B,EAAOhC,MAASiC,EAAKjC,MAAOC,QAAWgC,EAAKhC,QAASG,WAAcyB,SCxB7GO,IAASC,OACL,iCAAM,kBAAC,EAAD,MAAN,KACAC,SAASC,eAAe,W","file":"static/js/main.1c27e427.chunk.js","sourcesContent":["import React from \"react\";\nimport HighlightIcon from '@material-ui/icons/Highlight';\n\nfunction Header() {\n    return (\n       <header>\n           <h1> <HighlightIcon /> Keeper</h1>\n       </header>\n    )\n}\n\nexport default Header;","import React from \"react\";\n\nconst year = new Date().getFullYear();\n\nfunction Footer() {\n    return (\n        <footer>\n            <p> Copyright â“’ {year} </p>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from \"react\";\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nfunction Note(props) {\n\n    // Deleting a note\n    const handleClick = () => {\n        props.deleteNote(props.id);\n    }\n\n    return (\n        <div className=\"note\">\n        <h1>{props.title}</h1>\n        <p>{props.content}</p>\n        <button type = \"button\" onClick = {handleClick}>\n            <DeleteIcon /> \n        </button>\n        </div>\n    );\n}\n\nexport default Note;","import React, { useState } from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom';\n\nfunction CreateArea(props) {\n\n    // Create a state for expansion\n    const [isExpanded , setExpand] = useState(false);\n    \n    // Create a state for input fields\n    const [text , setText] = useState({\n        title : \"\",\n        content : \"\"\n    });\n\n    // Change the state of isExpanded\n    const handleExpand = () => {\n        setExpand(true);\n    }\n\n    // Update the input fields\n    const handleChange = (event) => {\n        const {name , value} = event.target;\n        setText(prevValue => {\n            return {\n                ...prevValue , \n                [name] : value\n            }\n        })\n    }\n\n    // Add Item to array\n    const handleClick = () => {\n        // Pass the text object to App.jsx\n        props.addNote(text);\n\n        // Reset the content of input field\n        setText({\n            title : \"\",\n            content : \"\"\n        })\n    }\n\n    return (\n        <div>\n        <form className = \"create-note\">\n            {isExpanded && <input onChange = {handleChange} value = {text.title} name=\"title\" placeholder=\"Title\" autoComplete = \"off\"/>}\n            <textarea onClick = {handleExpand} onChange = {handleChange} value = {text.content} name=\"content\" placeholder=\"Take a note...\" rows = {isExpanded ? \"3\" : \"1\"} autoComplete = \"off\" />\n            <Zoom in = {isExpanded ? true : false} >\n                <Fab type = \"button\" onClick = {handleClick}>\n                    <AddIcon />     \n                </Fab>\n            </Zoom>\n        </form>\n        </div>\n    );\n}\n\nexport default CreateArea;","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n    // Create a array for notes\n    const [notes , setNotes] = useState([]);\n\n    // Add note to the array\n    const addItem = (note) => {\n        setNotes(prevValue => [...prevValue , note]);\n    }\n\n    // Delete a note from the array\n    const deleteItem = (id) => {\n        setNotes(prevValue => prevValue.filter((item , index) => index !== id))\n    }\n\n    return (\n        <div>\n            <Header />\n            <Footer />\n            <CreateArea\n            addNote = {addItem} \n            />\n            {notes.map((note , index) => (\n                <Note key = {index} id = {index} title = {note.title} content = {note.content} deleteNote = {deleteItem} />\n            ))}\n        </div>\n    )\n}\n\nexport default App;","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDom.render(\n    <div> <App /> </div>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}